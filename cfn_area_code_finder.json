{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Create a load balanced, Auto Scaled web application in an existing Virtual Private Cloud (VPC). This example creates an Auto Scaling group behind a load balancer with a simple health check using a basic getting start AMI that has Node.js and Express based infrastructure. The web site is available on port 3001.",

  "Parameters" : {

    "ACFKeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
    },

    "ACFSSLCertificationID" : {
      "Description" : "The ARN of the SSL certificate to configure ELB",
      "Type" : "String",
      "Default" : "",
      "ConstraintDescription" : "must be a valid name of an pre-uploaded certificate in AWS Certification Manager."
    },

    "ACFAMIID" : {
      "Description" : "The AMI of Web Application (Area Code Finder)",
      "Type" : "String",
      "Default" : "",
      "ConstraintDescription" : "must be a valid ID of an Area Code Finder AMI."
    }, 

    "ACFHTTPPORT" : {
      "Description" : "HTTP port number",
      "Type" : "String",
      "Default" : "3000",
      "AllowedValues" : [ "3000" ],
      "ConstraintDescription" : "must select a valid HTTP port number."
    },    

    "ACFHTTPSPORT" : {
      "Description" : "HTTPS port number",
      "Type" : "String",
      "Default" : "3001",
      "AllowedValues" : [ "3001" ],
      "ConstraintDescription" : "must select a valid HTTPS port number."
    },

    "ACFInstanceType" : {
      "Description" : "Area Code Finder instance class",
      "Type" : "String",
      "Default" : "t2.small",
      "AllowedValues" : [ "t2.small" ],
      "ConstraintDescription" : "must select a valid area code finder instance type."
    },   

    "ACFDBInstanceClass" : {
      "Description" : "Database instance class",
      "Type" : "String",
      "Default" : "db.t2.small",
      "AllowedValues" : [ "db.t2.small" ],
      "ConstraintDescription" : "must select a valid database instance type."
    },    

    "ACFInstanceProfile" : {
      "Description" : "An (IAM) instance profile that can be used with IAM roles for EC2 instances",
      "Type" : "String",
      "Default" : "",
      "ConstraintDescription" : "must select a valid instance profile."
    }
  },

    "Resources" : {

        "acfVPC" : {
            "Type" : "AWS::EC2::VPC",
            "Properties" : {
                "EnableDnsSupport" : "true",
                "EnableDnsHostnames" : "true",
                "CidrBlock" : "172.24.0.0/16",
                "Tags" : [
                {"Key" : "Name", "Value" : "acf_VPC"},
                { "Key" : "Application", "Value" : "Area Code Finder (ACF) - VPC" },
                { "Key" : "E-mail", "Value" : "jackcy99@hotmail.com" }
                ]
            }
        },

        "ACFSBPUB1722410" : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "VpcId" : { "Ref" : "acfVPC" },
                "AvailabilityZone" : {"Fn::Join": ["",[{ "Ref": "AWS::Region" },"a"]]},
                "CidrBlock" : "172.24.10.0/24"
            }
        },   

        "ACFSBPUB1722420" : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "VpcId" : { "Ref" : "acfVPC" },
                "AvailabilityZone" : {"Fn::Join": ["",[{ "Ref": "AWS::Region" },"b"]]},
                "CidrBlock" : "172.24.20.0/24"
            }
        },  

        "ACFSBPUB1722430" : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "VpcId" : { "Ref" : "acfVPC" },
                "AvailabilityZone" : {"Fn::Join": ["",[{ "Ref": "AWS::Region" },"a"]]},
                "CidrBlock" : "172.24.30.0/24"
            }
        },   

        "ACFSBPUB1722440" : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "VpcId" : { "Ref" : "acfVPC" },
                "AvailabilityZone" : {"Fn::Join": ["",[{ "Ref": "AWS::Region" },"b"]]},
                "CidrBlock" : "172.24.40.0/24"
            }
        },    

        
        "ACFIGW" : {
            "Type" : "AWS::EC2::InternetGateway",
            "Properties" : {
                "Tags" : [
                    {"Key" : "Name", "Value" : "ACF_IGW"}
                ]
            }
        },    

            
        "ACFIGWAttachment" : {
            "Type" : "AWS::EC2::VPCGatewayAttachment",
            "Properties" : {
                "VpcId" : { "Ref" : "acfVPC" },
                "InternetGatewayId" : { "Ref" : "ACFIGW" }
            }
        },

        "ACFPublicRouteTable" : {
            "Type" : "AWS::EC2::RouteTable",
            "Properties" : {
                "VpcId" : { "Ref" : "acfVPC" },
                "Tags" : [
                  { "Key" : "Name", "Value" : "ACF_PublicRouteTable" },
                  { "Key" : "Application", "Value" : "Area Code Finder (ACF) - Public route table" },
                  { "Key" : "E-mail", "Value" : "jackcy99@hotmail.com" }
                ]
            }
        },   

        "ACFPublicRouteRecords" : {
            "Type" : "AWS::EC2::Route",
            "DependsOn" : "ACFIGWAttachment",
            "Properties" : {
                "RouteTableId" : { "Ref" : "ACFPublicRouteTable" },
                "DestinationCidrBlock" : "0.0.0.0/0",
                "GatewayId" : { "Ref" : "ACFIGW" }
            }
        }, 
            
        "ACFPublicSubnetRouteTableAssociation1" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : 
            {
                "SubnetId" : { "Ref" : "ACFSBPUB1722410" },
                "RouteTableId" : { "Ref" : "ACFPublicRouteTable" }
            }
        },
            
        "ACFPublicSubnetRouteTableAssociation2" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : 
            {
                "SubnetId" : { "Ref" : "ACFSBPUB1722420" },
                "RouteTableId" : { "Ref" : "ACFPublicRouteTable" }
            }
        },

        
        "ACFPublicNetworkAcl" : {
            "Type" : "AWS::EC2::NetworkAcl",
            "Properties" : {
                "VpcId" : { "Ref" : "acfVPC" }
            }
        },

        "ACFInboundEphemeralPublicNetworkAclEntry" : {
            "Type" : "AWS::EC2::NetworkAclEntry",
            "Properties" : {
                "NetworkAclId" : { "Ref" : "ACFPublicNetworkAcl" },
                "RuleNumber" : "100",
                "Protocol" : "6",
                "RuleAction" : "allow",
                "Egress" : "false",
                "CidrBlock" : "0.0.0.0/0",
                "PortRange" : { "From" : "0", "To" : "65535" }
            }
        },

        "ACFOutboundPublicNetworkAclEntry" : {
            "Type" : "AWS::EC2::NetworkAclEntry",
            "Properties" : {
                "NetworkAclId" : { "Ref" : "ACFPublicNetworkAcl" },
                "RuleNumber" : "100",
                "Protocol" : "6",
                "RuleAction" : "allow",
                "Egress" : "true",
                "CidrBlock" : "0.0.0.0/0",
                "PortRange" : { "From" : "0", "To" : "65535" }
            }
        },

        "ACFPublicSubnetNetworkAclAssociation" : {
            "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties" : {
                "SubnetId" : { "Ref" : "ACFSBPUB1722410" },
                "NetworkAclId" : { "Ref" : "ACFPublicNetworkAcl" }
            }
        },

        "ACFSGALBGeneral" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "VpcId" : { "Ref" : "acfVPC" },
                "GroupName" : "ACF_SG_ALB_General",
                "GroupDescription" : "ALB firewall",
                "SecurityGroupIngress" : [ 
                {"IpProtocol" : "tcp", "FromPort" : {"Ref" : "ACFHTTPPORT"}, "ToPort" : {"Ref" : "ACFHTTPSPORT"},  "CidrIp" : "0.0.0.0/0"}
                ]
            }
        },
        "ACFSGALBGeneralIngress" : {
            "Type" : "AWS::EC2::SecurityGroupIngress",
            "Properties" : {
                "GroupId" : { "Ref" : "ACFSGALBGeneral" },
                "IpProtocol" : "tcp",
                "ToPort" : "65535",
                "FromPort" : "0",
                "SourceSecurityGroupId" : { "Ref" : "ACFSGALBGeneral" }
            },
            "DependsOn" : "ACFSGALBGeneral"
        },

        "ACFSGWebApplicationGeneral" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "VpcId" : { "Ref" : "acfVPC" },
                "GroupName" : "ACF_SG_WebApplication_General",
                "GroupDescription" : "Web application firewall",
                "SecurityGroupIngress" : [ 
                    {"IpProtocol" : "tcp", "FromPort" : "21", "ToPort" : "22",  "CidrIp" : "0.0.0.0/0"}, 
                    {"IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80",  "CidrIp" : "0.0.0.0/0"}, 
                    {"IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443",  "CidrIp" : "0.0.0.0/0"}, 
                    {"IpProtocol" : "tcp", "FromPort" : {"Ref" : "ACFHTTPPORT"}, "ToPort" : {"Ref" : "ACFHTTPSPORT"},  "CidrIp" : "0.0.0.0/0"}
                ]
            },
            "DependsOn" : "ACFSGALBGeneral"
        },
        "ACFSGWebApplicationGeneralIngress" : {
            "Type" : "AWS::EC2::SecurityGroupIngress",
            "Properties" : {
                "GroupId" : { "Ref" : "ACFSGWebApplicationGeneral" },
                "IpProtocol" : "tcp",
                "ToPort" : "65535",
                "FromPort" : "0",
                "SourceSecurityGroupId" : { "Ref" : "ACFSGWebApplicationGeneral" }
            },
            "DependsOn" : "ACFSGWebApplicationGeneral"
        },
        
        "ACFSGDBGeneral" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "VpcId" : { "Ref" : "acfVPC" },
                "GroupName" : "ACF_SG_DB_General",
                "GroupDescription" : "DB Firewall",   
                "SecurityGroupIngress" : [ 
                {"IpProtocol" : "tcp", "FromPort" : "0", "ToPort" : "65535",  "SourceSecurityGroupId" : { "Ref" : "ACFSGWebApplicationGeneral" }}
                ]
            },
            "DependsOn" : "ACFSGWebApplicationGeneral"
        },
        "ACFSGDBGeneralIngress" : {
             "Type" : "AWS::EC2::SecurityGroupIngress",
             "Properties" : {
                 "GroupId" : { "Ref" : "ACFSGDBGeneral" },
                 "IpProtocol" : "tcp",
                 "ToPort" : "65535",
                 "FromPort" : "0",
                 "SourceSecurityGroupId" : { "Ref" : "ACFSGDBGeneral" }
             },
             "DependsOn" : "ACFSGDBGeneral"
         },

        "acfsubnetgroup" : {
            "Type" : "AWS::RDS::DBSubnetGroup",
            "Properties" : {
                "DBSubnetGroupDescription" : "Aurora RDS Database : MySQL 5.6",
                "DBSubnetGroupName" : "acfsubnetgroup",
                "SubnetIds" : [ { "Ref" : "ACFSBPUB1722430" }, { "Ref" : "ACFSBPUB1722440" } ]
            },
            "DependsOn" : ["ACFSBPUB1722430", "ACFSBPUB1722440"]
        },

        "ACFElasticLoadBalancer": {
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
            "Properties": {
                "SecurityGroups" : [{ "Ref" : "ACFSGALBGeneral" }],
                "Scheme" : "internet-facing",
                "Subnets" : [{ "Ref" : "ACFSBPUB1722410" }, { "Ref" : "ACFSBPUB1722420" }],
                "CrossZone" : "true",
                "Listeners": [
                {
                    "InstancePort": { "Ref" : "ACFHTTPSPORT" },
                    "InstanceProtocol" : "HTTPS",
                    "LoadBalancerPort": { "Ref" : "ACFHTTPSPORT" },
                    "Protocol": "HTTPS",
                    "SSLCertificateId" : { "Ref" :  "ACFSSLCertificationID" }
                }
                ],
                "HealthCheck" : {
                    "Target" : {
                      "Fn::Join" : [ "", [ "HTTPS:", { "Ref" : "ACFHTTPSPORT" }, "/" ] ]
                    },
                    "HealthyThreshold" : "10",
                    "UnhealthyThreshold" : "5",
                    "Interval" : "30",
                    "Timeout" : "5"
                  }
            }
        },

        "acfrdsdbcluster" : {
            "Type" : "AWS::RDS::DBCluster",
            "Properties" : {
                "AvailabilityZones" : [ {"Fn::Join": ["",[{ "Ref": "AWS::Region" },"a"]]}, {"Fn::Join": ["",[{ "Ref": "AWS::Region" },"b"]]}],
                "MasterUsername" : "dbuser",
                "MasterUserPassword" : "12345678", 
                "DatabaseName" : "areacodedb",
                "Engine" : "aurora",
                "DBSubnetGroupName" : { "Ref" : "acfsubnetgroup" },   
                "VpcSecurityGroupIds" : [{ "Ref" : "ACFSGDBGeneral" }]
            },
            "DependsOn" : ["acfsubnetgroup", "ACFSGDBGeneral"],
            "DeletionPolicy" : "Delete"
        },

        "acfrdsdbinstance1" : {
            "Type" : "AWS::RDS::DBInstance",
            "Properties" : {
                "DBSubnetGroupName" : {
                "Ref" : "acfsubnetgroup"
            },
            "Engine" : "aurora",
            "DBClusterIdentifier" : {
                "Ref" : "acfrdsdbcluster"
            },
            "PubliclyAccessible" : "false",
            "DBInstanceClass" : { "Ref" : "ACFDBInstanceClass" },          
            "Tags" : [
                { "Key" : "Name", "Value" : "acfrdsdbinstance1" },
                { "Key" : "Application", "Value" : "Area Code Finder - Primary DB instance" },
                { "Key" : "E-mail", "Value" : "jackcy99@hotmail.com" }
            ]
        },
        "DependsOn" : "acfrdsdbcluster",
        "DeletionPolicy" : "Delete"
        },

        "acfrdsdbinstance2" : {
            "Type" : "AWS::RDS::DBInstance",
            "Properties" : {
                "DBSubnetGroupName" : {
                "Ref" : "acfsubnetgroup"
            },
            "Engine" : "aurora",
            "DBClusterIdentifier" : {
                "Ref" : "acfrdsdbcluster"
            },
            "PubliclyAccessible" : "false",
            "DBInstanceClass" : { "Ref" : "ACFDBInstanceClass" },          
            "Tags" : [
                { "Key" : "Name", "Value" : "acfrdsdbinstance2" },
                { "Key" : "Application", "Value" : "Area Code Finder - Backup DB instance" },
                { "Key" : "E-mail", "Value" : "jackcy99@hotmail.com" }
            ]
        },
        "DependsOn" : ["acfrdsdbcluster", "acfrdsdbinstance1"],
        "DeletionPolicy" : "Delete"
        },
 
        "ACFLaunchConfiguration": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",    
            "Metadata" : {
                "Comment" : "Install packages, create files and exec commands",
                "AWS::CloudFormation::Init" : {
                    "config" : {
                        "packages" : {
                          "yum" : {
                            "httpd" : []
                          }
                        },
                        "services" : {
                          "sysvinit" : {
                            "httpd"    : { "enabled" : "true", "ensureRunning" : "true" }
                          }
                        }
                    }   
                }
            },
            "Properties": {
                "AssociatePublicIpAddress" : "true",
                "ImageId": {"Ref": "ACFAMIID"},
                "IamInstanceProfile" : { "Ref": "ACFInstanceProfile" },
                "InstanceType": { "Ref": "ACFInstanceType" },
                "KeyName" : {"Ref": "ACFKeyName"},
                "SecurityGroups": [{"Ref": "ACFSGWebApplicationGeneral"}],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash\n",
                                "yum update -y aws-cfn-bootstrap\n",
                   
                                "yum update -y aws-cli\n",
                   
                                "/opt/aws/bin/cfn-init -v ",
                                "         --stack ", { "Ref" : "AWS::StackName" },
                                "         --resource ACFLaunchConfiguration ",
                                "         --region ", { "Ref" : "AWS::Region" }, "\n",
                   
                                "/opt/aws/bin/cfn-signal -e $? ",
                                "         --stack ", { "Ref" : "AWS::StackName" },
                                "         --resource ACFAutoScalingGroup ",
                                "         --region ", { "Ref" : "AWS::Region" }, "\n",

                                "sudo echo \"\" > /tmp/dbname.txt\n",
                                "sudo chmod 666 /tmp/dbname.txt\n",
                                "sudo echo '", { "Fn::GetAtt" : [ "acfrdsdbinstance1", "Endpoint.Address" ] }, "' >/tmp/dbname.txt\n",
                                "sudo echo \"\" > /home/ec2-user/myapp/myapp/db/db_cluster_endpoint.json\n",
                                "sudo chmod 666 /home/ec2-user/myapp/myapp/db/db_cluster_endpoint.json\n",
                                "sudo echo \"{\\\"db_cluster_endpoint\\\" : \\\"", { "Fn::GetAtt" : [ "acfrdsdbinstance1", "Endpoint.Address" ] }, "\\\"}\"", ">/home/ec2-user/myapp/myapp/db/db_cluster_endpoint.json\n",
                                "sudo reboot\n"
                            ]
                        ]
                    }
                }
            },
            "CreationPolicy": {
                "ResourceSignal": {
                    "Timeout": "PT3M"
                }
            },
            "DependsOn" : ["acfrdsdbinstance1"]
        },
        
        "ACFAutoScalingGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "AutoScalingGroupName" : "ACF_AutoScalingGroup",
                "AvailabilityZones" : [ {"Fn::Join": ["",[{ "Ref": "AWS::Region" },"a"]]}, {"Fn::Join": ["",[{ "Ref": "AWS::Region" },"b"]]}],
                "DesiredCapacity": "2",
                "HealthCheckGracePeriod": "180",
                "HealthCheckType": "EC2",
                "LaunchConfigurationName": {"Ref": "ACFLaunchConfiguration"},
                "MaxSize": "2",
                "MinSize": "1",
                "LoadBalancerNames" :  [{"Ref": "ACFElasticLoadBalancer"}],
                "Tags": [
                    { "Key" : "Name", "Value" : "ACF_AutoScalingGroup", "PropagateAtLaunch" : "true" },
                    { "Key" : "Application", "Value" : "Area Code Finder (ACF) - Autoscaling Group", "PropagateAtLaunch" : "true" },
                    { "Key" : "E-mail", "Value" : "jackcy99@hotmail.com", "PropagateAtLaunch" : "true" }
                ],
                "VPCZoneIdentifier": [{ "Ref" : "ACFSBPUB1722410" }, { "Ref" : "ACFSBPUB1722420" }]
            },
            "UpdatePolicy": {
                "AutoScalingRollingUpdate": {
                    "MaxBatchSize": 1,
                    "MinInstancesInService": 1
                }
            },
            "DependsOn" : ["ACFLaunchConfiguration"]
        }


    },

    "Outputs" : {
        "WebsiteURL" : {
            "Value" : { "Fn::Join" : ["", ["https://", { "Fn::GetAtt" : [ "ACFElasticLoadBalancer", "DNSName" ]}, ":3001" ]]},
            "Description" : "Area Code Finder Website"
        }
    }
  
}

